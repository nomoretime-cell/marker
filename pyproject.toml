[tool.poetry]
name = "marker"
version = "0.1.0"
description = "pdf parser"
authors = ["jibing.yjb@alibaba-inc.com"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.13,!=3.9.7" # python version
scikit-learn = "^1.3.2"        # "from sklearn"
Pillow = "^10.1.0"             # "from PIL" Python 图像处理库， Python Imaging Library (PIL) 的一个分支
pytesseract = "^0.3.10"        # Tesseract OCR 引擎的库
PyMuPDF = "^1.23.5"            # 用于处理 PDF 文件。它基于 MuPDF（一款轻量级的 PDF 渲染和解析引擎）
pymupdf-fonts = "^1.0.5"       # pymupdf-fonts 不是 PyMuPDF 的官方模块，由社区提供的第三方模块，目的是增强 PyMuPDF 的字体处理功能
pydantic = "^2.4.2"            # "from pydantic" 用于数据验证
pydantic-settings = "^2.0.3"   # Pydantic库的一部分
nougat-ocr = "^0.1.17"         # meta nougat
transformers = "^4.34.1"       # transformers
numpy = "^1.26.1"              # 科学计算的 Python 库
python-dotenv = "^1.0.0"       # 支持从文件加载环境变量
torch = "^2.1.1"               # pytorch
ray = "^2.7.1"                 # 构建分布式应用程序的开源框架
tqdm = "^4.66.1"               # 在终端中显示进度条
tabulate = "^0.9.0"            # 将数据以表格的形式在终端中显示
thefuzz = "^0.20.0"            # "import fuzz" 字符串匹配和相似度比较
python-magic = "^0.4.27"       # "import magic" 文件类型检测
pyspellchecker = "^0.7.2"      # "from spellchecker" 进行拼写检查和纠正
ftfy = "^6.1.1"                # "import ftfy" 自动修复和规范化文本数据
nltk = "^3.8.1"                # "import nltk" Natural Language Toolkit 执行各种自然语言处理（NLP）任务，如标记化、词性标注、命名实体识别、语法分析等
ocrmypdf = "^15.4.0"           # 将 PDF 文件中的图像文本转换为可搜索的文本层
bitsandbytes = "^0.41.2.post2" # The bitsandbytes is a lightweight wrapper around CUDA custom functions
fastapi = "^0.105.0"           # http server
uvicorn = "^0.25.0"            # ASGI（Asynchronous Server Gateway Interface）服务器
minio = "^7.2.0"               # minio
gunicorn = "^21.2.0"
texify = "^0.1.8"
langid = "^1.1.6"

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
